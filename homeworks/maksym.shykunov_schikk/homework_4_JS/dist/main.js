// eslint-disable-next-line
!function (e) { var t = {}; function n(r) { if (t[r]) return t[r].exports; var o = t[r] = { i: r, l: !1, exports: {} }; return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports } n.m = e, n.c = t, n.d = function (e, t, r) { n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r }) }, n.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, n.t = function (e, t) { if (1 & t && (e = n(e)), 8 & t) return e; if (4 & t && "object" == typeof e && e && e.__esModule) return e; var r = Object.create(null); if (n.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var o in e) n.d(r, o, function (t) { return e[t] }.bind(null, o)); return r }, n.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return n.d(t, "a", t), t }, n.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, n.p = "", n(n.s = 0) }([function (e, t, n) { "use strict"; n.r(t); const r = { minLength: (e, t) => e.length >= t, maxLength: (e, t) => e.length <= t, pattern: (e, t) => e.match(t), email(e) { return this.pattern(e, /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i) }, phone(e) { return this.pattern(e, /^\+{1}\d{1,2}\({1}\d{3}\){1}\d{3}([-]{1}\d{2}){2}/) }, numberRange: (e, t, n) => "" === e || e >= t && e <= n }; !function () { const e = document.querySelector("#main_form"), t = document.querySelectorAll(".validate"), n = document.querySelector("#first_name"), o = document.querySelector("#last_name"), u = document.querySelector("#email"), l = document.querySelector("#phone"), a = document.querySelector("#age"), c = document.querySelector(".success-message"); function i(e, t, n) { return r.minLength(e, t) && r.maxLength(e, n) } e.addEventListener("submit", e => { e.preventDefault(); const s = i(n.value, 2, 20), d = i(o.value, 2, 20), f = r.email(u.value), m = r.phone(l.value), p = r.numberRange(a.value, 18, 120); function y(e, t) { e ? t.classList.remove("invalid") : t.classList.add("invalid") } y(s, n), y(d, o), y(f, u), y(m, l), y(p, a); const v = s && d && f && m && p; for (let e = 0; e < t.length; e++)v && (c.style.display = "block", t[e].classList.remove("invalid")) }) }() }]);
